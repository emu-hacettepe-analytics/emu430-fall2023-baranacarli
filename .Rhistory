install.packages("quarto")
library(dslabs)
install.packages("dslabs")
library(dslabs)
data(na_example)
## (c)
library(dslabs)
data(na_example)
na_example
library(dslabs)
data(na_example)
na_example
sum(is.na(na_example))
## (c)
library(dslabs)
data(na_example)
na_example
sum(is.na(na_example))
no_nas <- ifelse(is.na(na_example), 0, na_example)
library(dslabs)
data(na_example)
na_example
sum(is.na(na_example))
no_nas <- ifelse(is.na(na_example), 0, na_example)
no_nas
sum(is.na(na_example))
no_nas <- ifelse(is.na(na_example), 0, na_example)
no_nas <- ifelse(is.na(na_example), 0, na_example)
no_nas
library(dslabs)
data(na_example)
na_example
sum(is.na(na_example))
no_nas <- ifelse(is.na(na_example), 0, na_example)
no_nas
library(dslabs)
data(na_example)
na_example
sum(is.na(na_example))
no_nas <- ifelse(is.na(na_example),0,na_example)
no_nas
sum(is.na(na_example))
library(dslabs)
data(na_example)
na_example
sum(is.na(na_example))
no_nas <- ifelse(is.na(na_example),0,na_example)
no_nas
sum(is.na(no_nas))
print(hello word)
print ("hello word")
"first-program.R"
ln(20) and 𝒍𝒐𝒈𝟐 𝟐𝟎
print ("hello word")
"first-program.R"
log(20, base=exp(1)) + log(20, base = e)
log(20, base=exp(1)) + log(20, base = exp(1))
log(20, base= 1 + log(20, base = 1)
log(20, base= 1 + log(20, base = 1)
log(20, base=2)
log(20, base=1)
log(20, base=1)
12%%4
12%%5
12%/%5
12%/%4
30/5
print ("hello word")
30/7
30%/%7
# str fonksiyonunu kullanma
str(df)
str(df)
df <- data.frame(
Name = c("John", "Jane", "Bob"),
Age = c(25, 30, 22),
Score = c(95, 88, 75))
str(df)
print ("hello word")
"first-program.R"
str(df)
View(df)
View(df)
df <- data.frame(
Name = c("John", "Jane", "Bob", "Alice", "Charlie"),
Age = c(25, 30, 22, 28, 35),
Score = c(95, 88, 75, 92, 87)
)
# head fonksiyonunu kullanma
head(df)
# head fonksiyonunu kullanma
head(df)
df <- data.frame(
Name = c("John", "Jane", "Bob"),
Age = c(25, 30, 22),
Score = c(95, 88, 75)
)
# $ işlemcisini kullanarak sütuna erişim
names_column <- df$Name
ages_column <- df$Age
# Sonuçları ekrana yazdırma
print(names_column)
print(ages_column)
# $ işlemcisini kullanarak sütuna erişim
names_column <- df$Name
# Örnek veri çerçevesi oluşturma
df <- data.frame(
Name = c("John", "Jane", "Bob", "Alice", "Charlie"),
Age = c(25, 30, 22, 28, 35),
Score = c(95, 88, 75, 92, 87)
)
# Sonuçları ekrana yazdırma
print(names_column)
View(df)
print(ages_column)
library(dslabs)
data(murders)
class(murders)
str(murders) function
library(dslabs)
data(murders)
class(murders)
str(murders)
View(murders)
murders$total
codes <- c(380, 124, 818)
country <- c("italy", "canada", "egypt")
names(codes) <- country
print(codes)
codes<- c(italy=380, canada=124, egypt=818)
print(codes)
class(codes)
class(codes)
seq(1, 10, 2)
seq(1, 10)
codes[1:3]
codes(1:3)
codes(1:3)
codes <- c(380, 124, 818)
country <- c("italy", "canada", "egypt")
names(codes) <- country
print(codes)
class(codes)
codes<- c(italy=380, canada=124, egypt=818)
print(codes)
class(codes)
seq(1, 10)
codes(1:3)
index <- order(murders$total)
View(murders)
index
str(index)
index
View(murders)
View(murders)
region[index]
murders$region[index]
View(murders)
murder_rate <- (murders$total/murders$population)*100000
murder_rate <- (murders$total/murders$population)*100000
murder_rate <- (murders$total/murders$population)*100000
View(murders)
View(murders)
View(murders)
library(tidyverse)
library(tidyverse)
library(ggplot2)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
murders %>% ggplot()
library(ggplot2)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
murders %>% ggplot()
murders %>% ggplot() + geom_bar(aes(x = variable, y = value))
View(murders)
library(ggplot2)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
p <- murders %>%
ggplot(aes(population/10^6, total, label
= abb))
library(tidyverse)
library(ggplot2)
library(dplyr)
package.install(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
p <- murders %>%
ggplot(aes(population/10^6, total, label
= abb))
p + geom_point(size = 3) +
geom_text(nudge_x = 0.05) +
scale_x_continuous(trans = "log10") +
scale_y_continuous(trans = "log10")
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
p <- murders %>%
ggplot(aes(population/10^6, total, label
= abb))
p + geom_point(size = 3) +
geom_text(nudge_x = 0.05) +
scale_x_continuous(trans = "log10") +
scale_y_continuous(trans = "log10")
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
p <- murders %>%
ggplot(aes(population/10^6, total, label
= abb))
p + geom_point(size = 3) +
geom_text(nudge_x = 0.075) +
scale_x_log10() +
scale_y_log10() +
xlab("Populations in millions (log scale)") +
ylab("Total number of murders (log scale)") +
ggtitle("US Gun Murders in US 2010")
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
p <- murders %>%
ggplot(aes(population/10^6, total, label
= abb))
p + geom_point(size = 3) +
geom_text(nudge_x = 0.075) +
scale_x_log10() +
xlab("Populations in millions (log scale)") +
ylab("Total number of murders (log scale)") +
ggtitle("US Gun Murders in US 2010")
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
p <- murders %>%
ggplot(aes(population/10^6, total, label
= abb))
p + geom_point(size = 3) +
geom_text(nudge_x = 0.075) +
scale_x_log10() +
scale_y_log10() +
xlab("Populations in millions (log scale)") +
ylab("Total number of murders (log scale)") +
ggtitle("US Gun Murders in US 2010")
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
p <- murders %>%
ggplot(aes(population/10^6, total, label
= abb))
p + geom_point(size = 3) +
geom_text(nudge_x = 0.075) +
scale_x_log10() +
scale_y_log10() +
xlab("Populations in millions (log scale)") +
ylab("Total number of murders (log scale)") +
ggtitle("US Gun Murders in US 2010")
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
p <- murders %>%
ggplot(aes(population/10^6, total, label
= abb))
p + geom_point(size = 3) +
geom_text(nudge_x = 0.075) +
scale_x_log10() +
scale_y_log10() +
xlab("Populations in millions (log scale)") +
ylab("Total number of murders (log scale)") +
ggtitle("US Gun Murders in US 2010")
o Start from scratch
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
p <- murders %>%
ggplot(aes(population/10^6, total, label
= abb))
p + geom_point(size = 3) +
geom_text(nudge_x = 0.075) +
scale_x_log10() +
scale_y_log10() +
xlab("Populations in millions (log scale)") +
ylab("Total number of murders (log scale)") +
ggtitle("US Gun Murders in US 2010")
library(ggthemes)
install.packages("ggrepel")
install.packages("ggthemes")
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
p <- murders %>%
ggplot(aes(population/10^6, total, label
= abb))
p + geom_point(size = 3) +
geom_text(nudge_x = 0.075) +
scale_x_log10() +
scale_y_log10() +
xlab("Populations in millions (log scale)") +
ylab("Total number of murders (log scale)") +
ggtitle("US Gun Murders in US 2010")
library(ggthemes)
library(ggrepel)
### first define the slope of the line
r <- murders %>% summarize(rate = sum(total) / sum(population) * 10^6) %>% .$rate
## now make the plot.
murders %>% ggplot(aes(population/10^6, total, label = abb)) +
geom_abline(intercept = log10(r), lty = 2, color = "darkgrey") +
geom_point(aes(col = region), size = 3) +
geom_text_repel() +
scale_x_log10() +
scale_y_log10() +
xlab("Populations in millions (log scale)") +
ylab("Total number of murders (log scale)") +
ggtitle("US Gun Murders in US 2010") +
scale_color_discrete(name = "Region") +
theme_economist()
